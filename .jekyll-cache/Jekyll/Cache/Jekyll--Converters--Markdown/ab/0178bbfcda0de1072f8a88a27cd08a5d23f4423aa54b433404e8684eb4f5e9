I"≈<h1 id="goals">Goals</h1>
<ul>
  <li>Gain competency in Microsoft Azure through Fundamentals certification and beyond</li>
  <li>Gain competency in Amazon Web Services through Associate certification and beyond</li>
  <li>Prove ability in React JS Front End development</li>
  <li>Prove knowledge in novice level C++ or C# development</li>
  <li>Prove awareness and/or knowledge in the realm of product ownership</li>
  <li>Prove ability in breadth of engineering knowledge surrounding software engineering</li>
</ul>

<h2 id="certifications">Certifications</h2>

<h3 id="azure">Azure</h3>
<p><a href="/azure_notes/">Azure Notes</a></p>

<h2 id="amazon-web-services">Amazon Web Services</h2>

<h3 id="aws-certi-solution-architect">AWS Certi. Solution Architect</h3>

<p>Most popular. Needed for speciality exams. Prereq for professional. To do well, 
familiar with core services and how best to use them to follow best practices.</p>

<p>Multiple choice. No penalty for guessing.</p>

<p>130 minutes to complete the exam. Mark for future consideration. 65 questions.</p>

<h4 id="domain-1-design-resilient-architecture">Domain 1: Design Resilient Architecture</h4>
<p>34% of exam</p>

<p>EC2 Instance Store. Ephemeral volumes. Only certain EC2 instances are stored. Fixed capacity. Application level durable.</p>
<ul>
  <li>Used for storing temperary data, but not affected by ephemeral.</li>
</ul>

<p>Elastic Block Store. Encrpytion and snapshots. Provisionable capacity. Independent lifecycle. Can stop or preserve and 
connect to EC2. Durable, attachable storage for EC2.</p>
<ul>
  <li>SSD and HDD</li>
  <li>SSD types: general purpose and provisional IOPs (scale up easy)</li>
  <li>HDD types: general purpose and cold</li>
</ul>

<p>Third option for storage is Amazon EFS (elastic file system).</p>
<ul>
  <li>Multiple EC2 can reach the same EFS.</li>
  <li>Elastic</li>
  <li>NFS v4.0</li>
  <li>Compatible with Linux AMIs</li>
</ul>

<p>EFS can only attach to one VPC at a time. The most common model is S3. It is implemented as a distributed model. 
The S3 is eventually consistent across redundancies. S3 standard is cheaper for upload/download, most for access.</p>

<p>Access through IAM, bucket policy, or IALs. Virtually unlimited. Region scoped. Design for eleven 9‚Äôs.</p>

<h5 id="11-choose-reliable-resilient-storage">1.1: Choose Reliable Resilient Storage</h5>

<p>Even in disaster, you don‚Äôt lose data or state.</p>

<h5 id="12-decoupling-mechanisms-using-aws-services">1.2: Decoupling mechanisms using AWS Services</h5>

<p>Made easy with AWS</p>

<h5 id="13-how-to-design-a-multi-tier-architecture-solution">1.3: How to Design a Multi-Tier Architecture Solution</h5>

<p>Naturally decoupled.</p>

<h5 id="14-how-to-design-high-availability-andor-fault-tolerant-solutions">1.4: How to Design High Availability and/or Fault Tolerant Solutions</h5>

<p>Operating at scale, failure should be treated as a normal operation which is handled.</p>

<h4 id="domain-2-define-performant-solutions">Domain 2: Define Performant Solutions</h4>
<p>24% of exam</p>

<h4 id="domain-3-specify-secure-applications-and-architectures">Domain 3: Specify Secure Applications and Architectures</h4>
<p>26% of exam</p>

<h4 id="domain-4-design-cost-optimized-architectures">Domain 4: Design Cost-Optimized Architectures</h4>
<p>10% of exam</p>

<h4 id="domain-5-define-operationally-excellent-architectures">Domain 5: Define Operationally Excellent Architectures</h4>
<p>6% of exam</p>

<h2 id="skills">Skills</h2>

<h2 id="languages">Languages</h2>

<h4 id="python">Python</h4>

<h4 id="c">C++</h4>

<h4 id="ruby">Ruby</h4>

<h4 id="html-css-js">HTML, CSS, JS</h4>
<p>Using React</p>

<p>{% if page.lang == ‚Äòen‚Äô %}
    {{ page.date | date: ‚Äú%d/%m/%Y‚Äù }}
{% endif %}</p>

:ET